trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - main
      - release/*
      - feature/*
      - hotfix/*
  paths:
    exclude:
      - README.md

variables:
  - template: variables.yml

resources:
  repositories:
    - repository: templates
      type: github
      name: decentralized-cloud/templates
      endpoint: decentralized-cloud

name: $(GitVersion.SemVer)

stages:
  - stage: Build
    jobs:
      - template: build/build-test-publish.yml@templates
        parameters:
          version: ${{variables.artifactVersion}}
          vmImage: ${{variables.linuxVmImage}}
          shouldBuildContract: true
          shouldPublishServiceDockerImage: true
          shouldTestPublishResult: true
          shouldPublishHelmChartAsArtifact: true
          shouldPublishHelmChart: ${{ variables.shouldPublishHelmChart }}
          contractScriptFilePath: ${{ variables.contractScriptFilePath }}
          contractScriptworkingDirectory: ${{ variables.contractScriptworkingDirectory }}
          dockerContainerRegistry: ${{variables.dockerContainerRegistry}}
          dockerRepositoryName: ${{variables.dockerRepositoryName}}
          dockerBuildFilePath: "$(system.defaultWorkingDirectory)/docker/Dockerfile.build"
          dockerBuildContext: "$(system.defaultWorkingDirectory)"
          testDockerComposeFilePath: ${{ variables.testDockerComposeFilePath }}
          ciService: ${{ variables.ciService }}
          coverallsToken: ${{ variables.coverallsToken }}
          helmVersion: ${{ variables.helmVersion }}
          helmChartsDirectoryPath: ${{ variables.helmChartsDirectoryPath }}
          helmChartsOutputDirectoryPath: ${{ variables.helmChartsOutputDirectoryPath }}
          helmArtifactName: ${{ variables.helmArtifactName }}
          buildAndPushHelmChartDockerFilePath: ${{ variables.buildAndPushHelmChartDockerFilePath }}
          buildAndPushHelmChartDockerBuildContext: ${{ variables.buildAndPushHelmChartDockerBuildContext }}
          githubAccessCredentials: ${{ variables.githubAccessCredentials }}

  - stage: Dev
    dependsOn: [Build]
    jobs:
      - template: release/deploy-service-helm.yml@templates
        parameters:
          environment: Dev
          vmImage: ${{variables.linuxVmImage}}
          helmArtifactName: ${{ variables.helmArtifactName }}
          helmVersion: ${{ variables.helmVersion }}
          kubernetesServiceConnection: ${{ variables.kubernetesServiceConnection }}
          namespace: ${{ variables.devNamespace }}
          chartPath: ${{ variables.chartPath }}
          releaseName: ${{ variables.releaseName }}
          overrideValues: ${{ variables.devHelmOverrideValues }}

  - stage: Test
    dependsOn: [Dev]
    jobs:
      - template: release/deploy-service-helm.yml@templates
        parameters:
          environment: Test
          vmImage: ${{variables.linuxVmImage}}
          helmArtifactName: ${{ variables.helmArtifactName }}
          helmVersion: ${{ variables.helmVersion }}
          kubernetesServiceConnection: ${{ variables.kubernetesServiceConnection }}
          namespace: ${{ variables.testNamespace }}
          chartPath: ${{ variables.chartPath }}
          releaseName: ${{ variables.releaseName }}
          overrideValues: ${{ variables.testHelmOverrideValues }}

  - stage: Prod
    dependsOn: [Test]
    jobs:
      - template: release/deploy-service-helm.yml@templates
        parameters:
          environment: Prod
          vmImage: ${{variables.linuxVmImage}}
          helmArtifactName: ${{ variables.helmArtifactName }}
          helmVersion: ${{ variables.helmVersion }}
          kubernetesServiceConnection: ${{ variables.kubernetesServiceConnection }}
          namespace: ${{ variables.prodNamespace }}
          chartPath: ${{ variables.chartPath }}
          releaseName: ${{ variables.releaseName }}
          overrideValues: ${{ variables.prodHelmOverrideValues }}
