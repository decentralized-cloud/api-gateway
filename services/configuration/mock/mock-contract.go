// Code generated by MockGen. DO NOT EDIT.
// Source: services/configuration/contract.go

// Package mock_configuration is a generated GoMock package.
package mock_configuration

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigurationContract is a mock of ConfigurationContract interface.
type MockConfigurationContract struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationContractMockRecorder
}

// MockConfigurationContractMockRecorder is the mock recorder for MockConfigurationContract.
type MockConfigurationContractMockRecorder struct {
	mock *MockConfigurationContract
}

// NewMockConfigurationContract creates a new mock instance.
func NewMockConfigurationContract(ctrl *gomock.Controller) *MockConfigurationContract {
	mock := &MockConfigurationContract{ctrl: ctrl}
	mock.recorder = &MockConfigurationContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurationContract) EXPECT() *MockConfigurationContractMockRecorder {
	return m.recorder
}

// GetEdgeClusterServiceAddress mocks base method.
func (m *MockConfigurationContract) GetEdgeClusterServiceAddress() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEdgeClusterServiceAddress")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEdgeClusterServiceAddress indicates an expected call of GetEdgeClusterServiceAddress.
func (mr *MockConfigurationContractMockRecorder) GetEdgeClusterServiceAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEdgeClusterServiceAddress", reflect.TypeOf((*MockConfigurationContract)(nil).GetEdgeClusterServiceAddress))
}

// GetHttpHost mocks base method.
func (m *MockConfigurationContract) GetHttpHost() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpHost")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHttpHost indicates an expected call of GetHttpHost.
func (mr *MockConfigurationContractMockRecorder) GetHttpHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpHost", reflect.TypeOf((*MockConfigurationContract)(nil).GetHttpHost))
}

// GetHttpPort mocks base method.
func (m *MockConfigurationContract) GetHttpPort() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpPort")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHttpPort indicates an expected call of GetHttpPort.
func (mr *MockConfigurationContractMockRecorder) GetHttpPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpPort", reflect.TypeOf((*MockConfigurationContract)(nil).GetHttpPort))
}

// GetJwksURL mocks base method.
func (m *MockConfigurationContract) GetJwksURL() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJwksURL")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJwksURL indicates an expected call of GetJwksURL.
func (mr *MockConfigurationContractMockRecorder) GetJwksURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJwksURL", reflect.TypeOf((*MockConfigurationContract)(nil).GetJwksURL))
}

// GetProjectServiceAddress mocks base method.
func (m *MockConfigurationContract) GetProjectServiceAddress() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectServiceAddress")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProjectServiceAddress indicates an expected call of GetProjectServiceAddress.
func (mr *MockConfigurationContractMockRecorder) GetProjectServiceAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectServiceAddress", reflect.TypeOf((*MockConfigurationContract)(nil).GetProjectServiceAddress))
}
